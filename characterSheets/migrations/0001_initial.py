# Generated by Django 3.1.7 on 2021-03-18 10:14

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Ability',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
                ('description', models.TextField(max_length=2000)),
                ('type', models.CharField(choices=[('general', 'general'), ('academic', 'academic'), ('arcane', 'arcane'), ('martial', 'martial'), ('supernatural', 'supernatural')], max_length=13)),
                ('needTraining', models.BooleanField(default=False)),
            ],
        ),
        migrations.CreateModel(
            name='Saga',
            fields=[
                ('name', models.CharField(help_text='The name of the saga', max_length=200, primary_key=True, serialize=False)),
            ],
        ),
        migrations.CreateModel(
            name='VF',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='Virtue or flaw name', max_length=200)),
                ('description', models.TextField(help_text='Virtue or flaw Description', max_length=2000)),
                ('virtueOrFlaw', models.CharField(choices=[('virtue', 'virtue'), ('flaw', 'flaw')], help_text='Enter either virtue of flaw', max_length=6)),
                ('value', models.CharField(choices=[('minor', 'minor'), ('major', 'major'), ('free', 'free'), ('special', 'special')], max_length=11)),
                ('type', models.CharField(choices=[('general', 'general'), ('hermetic', 'hermetic'), ('supernatural', 'supernatural'), ('socialStatus', 'social status'), ('personality', 'personality'), ('story', 'story'), ('special', 'special')], max_length=13)),
            ],
        ),
        migrations.CreateModel(
            name='Speciality',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
                ('abi', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='characterSheets.ability')),
            ],
        ),
        migrations.CreateModel(
            name='Character',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='Enter the name of the character', max_length=200)),
                ('age', models.IntegerField(blank=True, default=25, help_text="Enter the character's age", null=True)),
                ('size', models.IntegerField(default=0, help_text='Character size, most humans are size 0')),
                ('confidence', models.IntegerField(default=0, help_text="Character's confidence")),
                ('decrepitude', models.IntegerField(default=0, help_text="Character's decrepitude score")),
                ('effectsAging', models.TextField(blank=True, help_text="Effects of a character's aging", max_length=1000, null=True, verbose_name='Effects of Aging')),
                ('warping', models.IntegerField(default=0, help_text="Character's warping score")),
                ('effectsWarping', models.TextField(blank=True, help_text="Effects of a character's warping", max_length=1000, null=True, verbose_name='Effects of Warping')),
                ('birthName', models.CharField(blank=True, help_text="Enter the character's birth name", max_length=200, null=True, verbose_name='Birth Name')),
                ('yearBorn', models.IntegerField(blank=True, help_text='Enter the year the character was born', null=True, verbose_name='Year Born')),
                ('gender', models.CharField(blank=True, choices=[('m', 'male'), ('f', 'female'), ('nb', 'non-binary'), ('o', 'other')], help_text="Character's gender", max_length=2, null=True)),
                ('nationality', models.CharField(blank=True, help_text="Character's nationality", max_length=200, null=True)),
                ('origin', models.CharField(blank=True, help_text="Character's place of origin", max_length=200, null=True, verbose_name='Place of Origin')),
                ('religion', models.CharField(blank=True, help_text="Character's religion", max_length=200, null=True)),
                ('title', models.CharField(blank=True, help_text="Character's title", max_length=200, null=True)),
                ('height', models.CharField(blank=True, help_text="Character's height", max_length=10, null=True)),
                ('weight', models.CharField(blank=True, help_text="Character's weight", max_length=10, null=True)),
                ('hair', models.CharField(blank=True, help_text="Character's hair color", max_length=200, null=True, verbose_name='Hair Color')),
                ('eyes', models.CharField(blank=True, help_text="Character's eye color", max_length=200, null=True, verbose_name='Eye Color')),
                ('handedness', models.CharField(blank=True, choices=[('l', 'left handed'), ('r', 'right handed'), ('a', 'ambidextrous')], help_text="Character's dominant hand", max_length=1, null=True)),
                ('int', models.IntegerField(choices=[(-3, -3), (-2, -2), (-1, -1), (0, 0), (1, 1), (2, 2), (3, 3)], default=0, verbose_name='intelligence')),
                ('per', models.IntegerField(choices=[(-3, -3), (-2, -2), (-1, -1), (0, 0), (1, 1), (2, 2), (3, 3)], default=0, verbose_name='perception')),
                ('str', models.IntegerField(choices=[(-3, -3), (-2, -2), (-1, -1), (0, 0), (1, 1), (2, 2), (3, 3)], default=0, verbose_name='strength')),
                ('sta', models.IntegerField(choices=[(-3, -3), (-2, -2), (-1, -1), (0, 0), (1, 1), (2, 2), (3, 3)], default=0, verbose_name='stamina')),
                ('pre', models.IntegerField(choices=[(-3, -3), (-2, -2), (-1, -1), (0, 0), (1, 1), (2, 2), (3, 3)], default=0, verbose_name='presence')),
                ('com', models.IntegerField(choices=[(-3, -3), (-2, -2), (-1, -1), (0, 0), (1, 1), (2, 2), (3, 3)], default=0, verbose_name='communication')),
                ('dex', models.IntegerField(choices=[(-3, -3), (-2, -2), (-1, -1), (0, 0), (1, 1), (2, 2), (3, 3)], default=0, verbose_name='dexterity')),
                ('qik', models.IntegerField(choices=[(-3, -3), (-2, -2), (-1, -1), (0, 0), (1, 1), (2, 2), (3, 3)], default=0, verbose_name='quickness')),
                ('flaws', models.ManyToManyField(blank=True, limit_choices_to={'virtueOrFlaw': 'flaw'}, related_name='flaws', to='characterSheets.VF')),
                ('player', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
                ('saga', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='characterSheets.saga')),
                ('virtues', models.ManyToManyField(blank=True, limit_choices_to={'virtueOrFlaw': 'virtue'}, related_name='virtues', to='characterSheets.VF')),
            ],
        ),
    ]
